components:
  schemas:
    CreateCart:
      type: object
      properties:
        owner:
          type: string
          description: Id autogenerado de user de mongo
        _id:
          type: string
          description: Id autogenerado de Mongo
        products:
          type: array
          description: Array con productos, con sus respectivas cantidades y precios
        totalPrice:
          type: number
          description: Precio total de los productos calculado por api
      example:
          owner: 655bbc3c1a0eb289df0c8023
          products: []
          totalPrice: 0
    UpdateCart:
      type: object
      properties:
        title:
          type: string
          description: Nombre del producto
        description:
          type: string
          description: Descripción del producto
        code:
          type: string
          description: Código del producto
        price:
          type: number
          description: Precio del producto
        stock:
          type: number
          description: Cantidad en stock del producto
        category:
          type: string
          description: Categoria a la que pertenece el producto
        thumbnail:
          type: string
          description: Links a las rutas de las imágenes del producto
      example:
          title: Don Saturino
          description: La galletita de los Argentinos y del Mundo
          price: 100
          thumbnail: https://clickandfoods.com/cdn/shop/products/2141429_f.jpg?v=1596957519\,
          code: dfnfdnfnfn
          stock: 45208
          category: alimentos
  responses:
    createC:
      type: object
      properties:
        status: Indicador del estado de la respuesta
        payload: Documento de carrito creado correctamente
      example:
        status: success
        payload:
          owner: 655bbc3c1a0eb289df0c8023
          _id: 655bbc3c1a0eb289df0c8023
          products: []
          totalPrice: 0
    readC:
      type: object
      properties:
        status: Indicador del estado de la respuesta
        payload: Devuelve los carritos
      example:
        status: success
        payload:
          - _id: 655bbc3c1a0eb289df0c8023
            owner: 655bbc3c1a0eb289df0c8023
            products: []
            totalPrice: 10000
          - _id: 655bbc3c1a0eb289df0c8023
            owner: 655bbc3c1a0eb289df0c8023
            products: []
            totalPrice: 10000
          - _id: 655bbc3c1a0eb289df0c8023
            owner: 655bbc3c1a0eb289df0c8023
            products: []
            totalPrice: 10000
    readOneC:
      type: object
      properties:
        status: Indicador del estado de la respuesta
        payload: Devuelve el carrito
      example:
        status: success
        payload:
          - _id: 655bbc3c1a0eb289df0c8023
            owner: 655bbc3c1a0eb289df0c8023
            products: []
            totalPrice: 10000
    updateC:
      type: object
      properties:
        status:
          type: string
          description: Indicador del estado de la respuesta
        payload:
          type: string
          description: ObjectId del carrito modificado
      example:
          status: success
          payload: 6541aae1e7b2683607f2b4da
    deleteC:
      type: object
      properties:
        status:
          type: string
          description: Indicador del estado de la respuesta
        payload:
          type: string
          description: ObjectId del carrito eliminado
      example:
          status: success
          payload: 6541aae1e7b2683607f2b4da
    auth:
      type: object
      properties:
        status:
          type: string
          description: Estado de la solicitud
        from:
          type: string
          description: Descripción del endpoint del error
        message:
          type: string
          description: Descripción del error
      example:
        status: auth
        from: POST /api/sessions/signout middleware
        message: Invalid credentials
    forbidden:
      type: object
      properties:
        status:
          type: string
          description: Estado de la solicitud
        from:
          type: string
          description: Descripción del endpoint del error
        message:
          type: string
          description: Descripción del error
      example:
        status: forbidden
        from: POST /api/sessions/signout middleware
        message: Not Allowed
    incomplete:
      type: object
      properties:
        status:
          type: string
          description: Estado de la solicitud
        from:
          type: string
          description: Descripción del endpoint del error
        message:
          type: string
          description: Descripción del error
      example:
        status: error
        from: POST /api/sessions/register middleware
        message: Incomplete values
    notFound:
      type: object
      properties:
        status:
          type: string
          description: Indicador del estado de la respuesta
        from:
          type: string
          description: Indicador de dónde se cometió el error
        message:
          type: string
          description: Indicador de qué error se cometió
      example:
        status: error
        from: controller
        message: Not found documents
    fatal:
      type: object
      properties:
        status:
          type: string
          description: Indicador del estado de la respuesta
        from:
          type: string
          description: Indicador de dónde se cometió el error
        message:
          type: string
          description: Indicador de qué error se cometió
      example:
        status: fatal
        from: error handler
        message: dat is not defined
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: token
paths:
  /api/carts:
    post:
      summary: Crear un nuevo carrito 
      tags:
        - Cart
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/schemas/CreateCart'
      responses:
        "201":
          description: Éxito en la carga de un carrito
          content:
            application/json:
              schema:
                $ref: '#components/responses/create'
        "401":
          description: Credenciales invalidas
          content:
            application/json:
              schema:
                $ref: '#components/responses/auth'
        "403":
          description: Acceso no permitido
          content:
            application/json:
              schema:
                $ref: '#components/responses/forbidden'
        "500":
          description: Falla del servidor al crear un carrito
          content:
            application/json:
              schema:
                $ref: '#components/responses/fatal'
    get:
      summary: Leer los carritos del sistema
      tags:
        - Cart
      parameters:
        - name: page
          in: query
          type: integer
          description: Numero de página a mostrar
        - name: limit
          in: query
          type: integer
          description: Numero de documentos a mostrar por página
      responses:
        "200":
          description: Éxito en la lectura de carritos
          content:
            application/json:
              schema:
                $ref: '#components/responses/readC'
        "404":
          description: Documento/s no encontrados
          content:
            application/json:
              schema:
                $ref: '#components/responses/notFound'
        "500":
          description: Falla del servidor al leer los carritos
          content:
            application/json:
              schema:
                $ref: '#components/responses/fatal'       
  /api/carts/{cid}:
    get:
      summary: Leer uno de los carritos del sistema
      tags:
        - Cart
      security:
        - cookieAuth: []
      parameters:
        - name: cid
          in: path
          required: true
          description: ObjectId del carrito a traer
          schema:
            $type: string
      responses:
        "200":
          description: Éxito en la lectura del carrito
          content:
            application/json:
              schema:
                $ref: '#components/responses/readOneC'
        "404":
          description: Documento no encontrado
          content:
            application/json:
              schema:
                $ref: '#components/responses/notFound'
        "500":
          description: Falla del servidor al leer el carrito
          content:
            application/json:
              schema:
                $ref: '#components/responses/fatal' 
    put:
      summary: Actualizar los datos de un carrito
      tags:
        - Cart
      security:
        - cookieAuth: []
      parameters:
        - name: cid
          in: path
          required: true
          description: ObjectId del carrito a modificar
          schema:
            $type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/schemas/UpdateCart'
      responses:
        "200":
          description: Éxito al actualizar un carrito
          content:
            application/json:
              schema:
                $ref: '#components/responses/updateC'
        "401":
          description: Credenciales invalidas
          content:
            application/json:
              schema:
                $ref: '#components/responses/auth'
        "403":
          description: Acceso no permitido
          content:
            application/json:
              schema:
                $ref: '#components/responses/forbidden'
        "404":
          description: Documento/s no encontrados
          content:
            application/json:
              schema:
                $ref: '#components/responses/notFound'
        "500":
          description: Falla del servidor al actualizar u carrito
          content:
            application/json:
              schema:
                $ref: '#components/responses/fatal'
    delete:
      summary: Eliminar un carrito del sistema
      tags:
        - Cart
      security:
        - cookieAuth: []
      parameters:
        - name: cid
          in: path
          required: true
          description: ObjectId del carrito a eliminar
          schema:
            $type: string
      responses:
        "200":
          description: Éxito al eliminar un carrito
          content:
            application/json:
              schema:
                $ref: '#components/responses/deleteC'
        "400":
          description: Campos faltantes
          content:
            application/json:
              schema:
                $ref: '#components/responses/incomplete'
        "401":
          description: Credenciales invalidas
          content:
            application/json:
              schema:
                $ref: '#components/responses/auth'
        "403":
          description: Acceso no permitido
          content:
            application/json:
              schema:
                $ref: '#components/responses/forbidden'
        "404":
          description: Documento/s no encontrados
          content:
            application/json:
              schema:
                $ref: '#components/responses/notFound'
        "500":
          description: Falla del servidor al eliminar un carrito
          content:
            application/json:
              schema:
                $ref: '#components/responses/fatal'